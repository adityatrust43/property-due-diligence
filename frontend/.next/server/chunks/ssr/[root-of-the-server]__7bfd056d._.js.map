{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/USER/Documents/Chi%20SquareX/New%20app/frontend/src/app/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from 'react';\nimport Image from 'next/image';\n\nexport default function Home() {\n  const [messages, setMessages] = useState<{ text: string; sender: 'user' | 'bot' }[]>([]);\n  const [input, setInput] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const handleSendMessage = async () => {\n    if (input.trim() === '') return;\n\n    const userMessage = { text: input, sender: 'user' as const };\n    setMessages((prevMessages) => [...prevMessages, userMessage]);\n    setInput('');\n    setLoading(true);\n\n    try {\n      const response = await fetch('http://localhost:5000/chat', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ message: input }),\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const data = await response.json();\n      const botMessage = { text: data.response, sender: 'bot' as const };\n      setMessages((prevMessages) => [...prevMessages, botMessage]);\n    } catch (error) {\n      console.error('Error sending message:', error);\n      setMessages((prevMessages) => [\n        ...prevMessages,\n        { text: 'Error: Could not get a response.', sender: 'bot' as const },\n      ]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col h-screen bg-white text-gray-800\">\n      {/* Header */}\n      <header className=\"flex items-center justify-between p-4 border-b border-gray-200\">\n        <div className=\"flex items-center\">\n          <span className=\"font-semibold text-lg\">ChatGPT</span>\n          <svg className=\"w-4 h-4 ml-1 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M19 9l-7 7-7-7\"></path>\n          </svg>\n        </div>\n        <div className=\"flex items-center space-x-2\">\n          <button className=\"px-4 py-2 rounded-md bg-black text-white text-sm font-medium\">Log in</button>\n          <button className=\"px-4 py-2 rounded-md border border-gray-300 text-gray-800 text-sm font-medium\">Sign up for free</button>\n          <svg className=\"w-5 h-5 text-gray-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n          </svg>\n        </div>\n      </header>\n\n      {/* Main Content - Chat History */}\n      <div className=\"flex-1 overflow-y-auto p-4 space-y-4 flex flex-col items-center\">\n        {messages.length === 0 ? (\n          <div className=\"flex-1 flex flex-col items-center justify-center\">\n            <h1 className=\"text-4xl font-bold mb-8\">ChatGPT</h1>\n            {/* Suggestion Buttons */}\n            <div className=\"flex flex-wrap justify-center gap-4 mt-8 max-w-2xl\">\n              <button className=\"flex items-center px-4 py-2 border border-gray-300 rounded-full text-gray-700 text-sm hover:bg-gray-50\">\n                <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"></path>\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\"></path>\n                </svg>\n                Analyze images\n              </button>\n              <button className=\"flex items-center px-4 py-2 border border-gray-300 rounded-full text-gray-700 text-sm hover:bg-gray-50\">\n                <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n                </svg>\n                Surprise me\n              </button>\n              <button className=\"flex items-center px-4 py-2 border border-gray-300 rounded-full text-gray-700 text-sm hover:bg-gray-50\">\n                <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\"></path>\n                </svg>\n                Summarize text\n              </button>\n              <button className=\"flex items-center px-4 py-2 border border-gray-300 rounded-full text-gray-700 text-sm hover:bg-gray-50\">\n                <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M11 5H6a2 2 0 00-2 2v11a2 2 0 002 2h11a2 2 0 002-2v-5m-1.414-9.414a2 2 0 112.828 2.828L11.828 15H9v-2.828l8.586-8.586z\"></path>\n                </svg>\n                Help me write\n              </button>\n              <button className=\"flex items-center px-4 py-2 border border-gray-300 rounded-full text-gray-700 text-sm hover:bg-gray-50\">\n                More\n              </button>\n            </div>\n          </div>\n        ) : (\n          <div className=\"w-full max-w-2xl space-y-4\">\n            {messages.map((msg, index) => (\n              <div\n                key={index}\n                className={`flex ${\n                  msg.sender === 'user' ? 'justify-end' : 'justify-start'\n                }`}\n              >\n                <div\n                  className={`max-w-xs lg:max-w-md px-4 py-2 rounded-lg ${\n                    msg.sender === 'user'\n                      ? 'bg-blue-600 text-white'\n                      : 'bg-gray-200 text-gray-800'\n                  }`}\n                >\n                  {msg.text}\n                </div>\n              </div>\n            ))}\n            {loading && (\n              <div className=\"flex justify-start\">\n                <div className=\"max-w-xs lg:max-w-md px-4 py-2 rounded-lg bg-gray-200 text-gray-800\">\n                  Typing...\n                </div>\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n\n      {/* Input Area */}\n      <div className=\"p-4 bg-white border-t border-gray-200 flex flex-col items-center\">\n        <div className=\"w-full max-w-2xl relative\">\n          <div className=\"relative flex items-center border border-gray-300 rounded-xl shadow-lg p-2\">\n            <input\n              type=\"text\"\n              className=\"flex-1 p-2 pl-4 pr-10 rounded-xl focus:outline-none text-lg\"\n              placeholder=\"Ask anything\"\n              value={input}\n              onChange={(e) => setInput(e.target.value)}\n              onKeyPress={(e) => {\n                if (e.key === 'Enter') {\n                  handleSendMessage();\n                }\n              }}\n            />\n            <div className=\"absolute right-4 flex items-center space-x-2\">\n              <button className=\"flex items-center text-gray-600 text-sm px-3 py-1 rounded-full hover:bg-gray-100\">\n                <Image src=\"/file.svg\" alt=\"Attach\" width={16} height={16} className=\"mr-1\" />\n                Attach\n              </button>\n              <button className=\"flex items-center text-gray-600 text-sm px-3 py-1 rounded-full hover:bg-gray-100\">\n                <Image src=\"/globe.svg\" alt=\"Search\" width={16} height={16} className=\"mr-1\" />\n                Search\n              </button>\n            </div>\n          </div>\n          <button className=\"absolute right-1/2 transform translate-x-1/2 -bottom-14 bg-gray-100 text-gray-600 px-4 py-2 rounded-full text-sm flex items-center\">\n            <Image src=\"/window.svg\" alt=\"Voice\" width={16} height={16} className=\"mr-1\" />\n            Voice\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}